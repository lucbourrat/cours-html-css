h1 {
	color: red;	
	color: #000000;
	color: rgb(125,125,125);
	color: rgba(125,125,125);

	font-size: 80px;
}

h2 {
	color: red;
	font-size: 60px;
	font-family: 'Roboto', sans-serif;
	font-weight: 700;
}

/* ceci est un commentaire */

.title2 {
	color : blue;
	font-size: 60px;
}

#title2 {
	font-size: 40px;
}

/* les sélecteur en css */

.class1 {
	/* Sélectionne les éléments avec la class "class1" */
}

#id1 {
	/* Sélectionne l'élément avec l'id "id1" */
}

p {
	/* Sélectionne les éléments p */
}

p.class1 {
	/* Sélectionne les éléments p ayant comme class "class1" */
}

div,p {
	/* Sélectionne les éléments div ET les éléments p */
}

div p {
	/* Sélectionne les éléments p à l'intérieur d'éléments div */
}



.space {
	margin-top: 100px;
}


.bordures {
	border: 2px solid blue;
	border-radius: 16px;
}

/*FLEXBOX*/

#conteneur
{
	height: 400px;

    display: flex; /*A Appliquer sur le parent !!!*/


    /*DIRECTION*/
    flex-direction: column;
    flex-direction: column-reverse;
    flex-direction: row;



    /*GESTION DE RETOUR A LA LIGNE*/

						/*  Par défaut, les blocs essaient de rester sur la même ligne s'ils n'ont pas la place 
					    	(ce qui peut provoquer des bugs de design, parfois). 
					    	Si vous voulez, vous pouvez demander à ce que les blocs aillent à la ligne lorsqu'ils n'ont plus la place, 
					    	avec flex-wrap  qui peut prendre ces valeurs :

							nowrap : pas de retour à la ligne (par défaut) ;
							wrap : les éléments vont à la ligne lorsqu'il n'y a plus la place ;
							wrap-reverse : les éléments vont à la ligne, lorsqu'il n'y a plus la place, en sens inverse.*/
	flex-wrap: wrap;
	/*flex-wrap: nowrap;*/
	/*flex-wrap: wrap-reverse;*/



	/*ALIGNEMENT*/
	justify-content: flex-start;
	/*justify-content: flex-end;*/
	/*justify-content: center;*/
	/*justify-content: space-between;*/
	/*justify-content: space-around;*/





	/*ALIGNEMENT SUR L'AXE SECONDAIRE*/
	align-items: flex-start;
	/*align-items: flex-end;*/
	/*align-items: center;*/


	/*ALIGNER UN SEUL ELEMENT*/
	/*Voir elt3*/


	/*ORDONNER*/
	/*Voir elt1 elt2 elt2*/
}

.element {
	height: 150px;
	width: 200px;
}
.elt1 {
	background-color: orange;
	/*order: 2;*/
}
.elt2 {
	background-color: blue;
	/*order: 3;*/
}
.elt3 {
	background-color: green;

	/*AALIGNER UN SEUL ELEMENT*/
	/*align-self: flex-end;*/

	/*order: 1;*/
}



/* CSS pour la page responsive */


.article_fruit {
	/*Source pour la propriété border*/


	margin-bottom: 10px;
	/*display: block;*/
	/*display: inline;*/
	/*display: inline-block;*/
	/*display: flex;*/

	/*Positionnement en html / css : https://fr.learnlayout.com/position.html */
	/*Exercices sur flexbox : https://flexboxfroggy.com/#fr */

	/*height: 300px;*/
	/*width: 300px;*/

	width: 50%;
}

#fruits {
	display: flex;
	/*flex-direction: row;*/
}


/*https://getbootstrap.com/docs/4.1/layout/overview/*/

/*Extra small devices (portrait phones, less than 576px)*/
@media (max-width: 575.98px) { 
	#fruits {
		display: flex;
		flex-direction: column;
	}
	.article_fruit {
		width: 100%;
	}
}

/*Small devices (landscape phones, less than 768px)*/
@media (max-width: 767.98px) { 

}

/*Medium devices (tablets, less than 992px)*/
@media (max-width: 991.98px) { 
	h2 {
		color: green;
	}
}

/*Large devices (desktops, less than 1200px)*/
@media (max-width: 1199.98px) { .

}



/*DECOUPAGE MAQUETTE*/
/*GIT & GITHUB    Google sheets*/